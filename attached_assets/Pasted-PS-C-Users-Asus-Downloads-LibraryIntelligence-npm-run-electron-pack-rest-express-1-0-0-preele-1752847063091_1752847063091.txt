PS C:\Users\Asus\Downloads\LibraryIntelligence> npm run electron-pack

> rest-express@1.0.0 preelectron-pack
> npm run build


> rest-express@1.0.0 build
> tsc && vite build

client/src/components/dashboard/book-recommendations.tsx:100:15 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ [key: string]: number; } | {}'.
  No index signature with a parameter of type 'string' was found on type '{ [key: string]: number; } | {}'.

100           if (genrePreferences[genre]) {
                  ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:101:22 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ [key: string]: number; } | {}'.
  No index signature with a parameter of type 'string' was found on type '{ [key: string]: number; } | {}'.

101             score += genrePreferences[genre] * 3;
                         ~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:110:36 - error TS18046: 'favAuthor' is of type 'unknown'.

110           if (bookAuthors.includes(favAuthor.toLowerCase()) && favAuthor.length > 2) {
                                       ~~~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:110:64 - error TS18046: 'favAuthor' is of type 'unknown'.

110           if (bookAuthors.includes(favAuthor.toLowerCase()) && favAuthor.length > 2) {
                                                                   ~~~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:120:34 - error TS18046: 'favBook' is of type 'unknown'.

120           if (bookTitle.includes(favBook.toLowerCase()) || favBook.toLowerCase().includes(bookTitle)) {
                                     ~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:120:60 - error TS18046: 'favBook' is of type 'unknown'.

120           if (bookTitle.includes(favBook.toLowerCase()) || favBook.toLowerCase().includes(bookTitle)) {
                                                               ~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:130:33 - error TS18046: 'favorite' is of type 'unknown'.

130           if (bookTags.includes(favorite.toLowerCase())) {
                                    ~~~~~~~~

client/src/components/dashboard/book-recommendations.tsx:149:63 - error TS2345: Argument of type 'Set<unknown> | Set<string>' is not assignable to parameter of type 'Set<string>'.
  Type 'Set<unknown>' is not assignable to type 'Set<string>'.
    Type 'unknown' is not assignable to type 'string'.

149         matchReasons: getMatchReasons(book, genrePreferences, favoriteAuthors, favoriteBooks)
                                                                  ~~~~~~~~~~~~~~~

client/src/components/dashboard/borrowing-trends.tsx:16:11 - error TS7034: Variable 'monthlyData' implicitly has type 'any[]' in some locations where its type cannot be determined.

16     const monthlyData = [];
             ~~~~~~~~~~~

client/src/components/dashboard/borrowing-trends.tsx:41:25 - error TS7005: Variable 'monthlyData' implicitly has an 'any[]' type.

41       const monthData = monthlyData.find(data => data.name === monthKey);
                           ~~~~~~~~~~~

client/src/components/dashboard/popular-books.tsx:27:5 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<Book[], Error, Book[], readonly unknown[]>, queryClient?: QueryClient | undefined): DefinedUseQueryResult<Book[], Error>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'DefinedInitialDataOptions<Book[], Error, Book[], readonly unknown[]>'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<Book[], Error, Book[], readonly unknown[]>, queryClient?: QueryClient | undefined): UseQueryResult<Book[], Error>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'UndefinedInitialDataOptions<Book[], Error, Book[], readonly unknown[]>'.
  Overload 3 of 3, '(options: UseQueryOptions<Book[], Error, Book[], readonly unknown[]>, queryClient?: QueryClient | undefined): UseQueryResult<Book[], Error>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'UseQueryOptions<Book[], Error, Book[], readonly unknown[]>'.

27     onError: (error) => console.log('Popular books query error:', error),
       ~~~~~~~


client/src/components/dashboard/popular-books.tsx:27:15 - error TS7006: Parameter 'error' implicitly has an 'any' type.

27     onError: (error) => console.log('Popular books query error:', error),
                 ~~~~~

client/src/components/dashboard/popular-books.tsx:33:5 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<Borrowing[], Error, Borrowing[], readonly unknown[]>, queryClient?: QueryClient | undefined): DefinedUseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'DefinedInitialDataOptions<Borrowing[], Error, Borrowing[], readonly unknown[]>'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<Borrowing[], Error, Borrowing[], readonly unknown[]>, queryClient?: QueryClient | undefined): UseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'UndefinedInitialDataOptions<Borrowing[], Error, Borrowing[], readonly unknown[]>'.
  Overload 3 of 3, '(options: UseQueryOptions<Borrowing[], Error, Borrowing[], readonly unknown[]>, queryClient?: QueryClient | undefined): UseQueryResult<Borrowing[], Error>', gave the following error.
    Object literal may only specify known properties, and 'onError' does not exist in type 'UseQueryOptions<Borrowing[], Error, Borrowing[], readonly unknown[]>'.

33     onError: (error) => console.log('Borrowings query error:', error),
       ~~~~~~~


client/src/components/dashboard/popular-books.tsx:33:15 - error TS7006: Parameter 'error' implicitly has an 'any' type.

33     onError: (error) => console.log('Borrowings query error:', error),
                 ~~~~~

client/src/components/dashboard/popular-books.tsx:41:44 - error TS2339: Property 'filter' does not exist on type 'never[] | NonNullable<TQueryFnData>'.
  Property 'filter' does not exist on type 'NonNullable<TQueryFnData>'.

41       const bookBorrowings = allBorrowings.filter((b: Borrowing) => b.bookId === bookId);
                                              ~~~~~~

client/src/components/dashboard/popular-books.tsx:47:45 - error TS7006: Parameter 'b' implicitly has an 'any' type.

47       const ratings = bookBorrowings.filter(b => b.rating).map(b => b.rating!);
                                               ~

client/src/components/dashboard/popular-books.tsx:47:64 - error TS7006: Parameter 'b' implicitly has an 'any' type.

47       const ratings = bookBorrowings.filter(b => b.rating).map(b => b.rating!);
                                                                  ~

client/src/components/dashboard/popular-books.tsx:48:58 - error TS7006: Parameter 'a' implicitly has an 'any' type.

48       const avgRating = ratings.length ? ratings.reduce((a, b) => a + b, 0) / ratings.length : 0;
                                                            ~

client/src/components/dashboard/popular-books.tsx:48:61 - error TS7006: Parameter 'b' implicitly has an 'any' type.

48       const avgRating = ratings.length ? ratings.reduce((a, b) => a + b, 0) / ratings.length : 0;
                                                               ~

client/src/components/dashboard/popular-books.tsx:51:46 - error TS7006: Parameter 'b' implicitly has an 'any' type.

51       const borrowDates = bookBorrowings.map(b => new Date(b.borrowDate).getTime());
                                                ~

client/src/components/dashboard/popular-books.tsx:81:39 - error TS2339: Property 'filter' does not exist on type 'NonNullable<TQueryFnData>'.

81     const bookBorrowings = borrowings.filter((b: Borrowing) => b.bookId === bookId && b.rating);
                                         ~~~~~~

client/src/components/dashboard/popular-books.tsx:116:33 - error TS2345: Argument of type 'TQueryFnData' is not assignable to parameter of type 'Book[]'.

116   const sortedBooks = sortBooks(books);
                                    ~~~~~

  node_modules/@tanstack/react-query/build/modern/useQuery.d.ts:5:27
    5 declare function useQuery<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData, TQueryKey extends QueryKey = QueryKey>(options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>, queryClient?: QueryClient): DefinedUseQueryResult<TData, TError>;
                                ~~~~~~~~~~~~~~~~~~~~~~
    This type parameter might need an `extends Book[]` constraint.

client/src/components/dashboard/popular-books.tsx:195:34 - error TS2339: Property 'popularityScore' does not exist on type 'Book'.

195                             book.popularityScore >= 0
                                     ~~~~~~~~~~~~~~~

client/src/components/dashboard/popular-books.tsx:200:36 - error TS2339: Property 'popularityScore' does not exist on type 'Book'.

200                               book.popularityScore >= 0
                                       ~~~~~~~~~~~~~~~

client/src/components/dashboard/popular-books.tsx:204:37 - error TS2339: Property 'popularityScore' does not exist on type 'Book'.

204                               {book.popularityScore}
                                        ~~~~~~~~~~~~~~~

client/src/components/dashboard/popular-books.tsx:207:36 - error TS2339: Property 'popularityScore' does not exist on type 'Book'.

207                               book.popularityScore >= 0
                                       ~~~~~~~~~~~~~~~

client/src/components/dashboard/popular-books.tsx:220:37 - error TS2339: Property 'timesBorrowed' does not exist on type 'Book'.

220                               {book.timesBorrowed || 0}
                                        ~~~~~~~~~~~~~

client/src/components/dashboard/popular-books.tsx:231:35 - error TS2339: Property 'rating' does not exist on type 'Book'.

231                             {book.rating !== null ? (
                                      ~~~~~~

client/src/components/dashboard/popular-books.tsx:235:50 - error TS2339: Property 'rating' does not exist on type 'Book'.

235                                     {Number(book.rating).toFixed(1)}
                                                     ~~~~~~

client/src/components/dashboard/popular-books.tsx:238:66 - error TS2339: Property 'rating' does not exist on type 'Book'.

238                                     {renderStars(parseFloat(book.rating) / 2)}
                                                                     ~~~~~~

client/src/components/dashboard/top-borrowers.tsx:245:65 - error TS2339: Property 'borrowDate' does not exist on type 'Borrowing'.

245                                 if (!latest || new Date(current.borrowDate) > new Date(latest.borrowDate)) {
                                                                    ~~~~~~~~~~

client/src/components/dashboard/top-borrowers.tsx:245:95 - error TS2339: Property 'borrowDate' does not exist on type 'Borrowing'.

245                                 if (!latest || new Date(current.borrowDate) > new Date(latest.borrowDate)) {
                                                                                                  ~~~~~~~~~~

client/src/components/dashboard/top-borrowers.tsx:252:75 - error TS2339: Property 'borrowDate' does not exist on type 'Borrowing'.

252                               const borrowDate = new Date(latestBorrowing.borrowDate);
                                                                              ~~~~~~~~~~

client/src/components/forms/book-form.tsx:19:10 - error TS2614: Module '"@/components/ui/index-item"' has no exported member 'IndexItem'. Did you mean to use 'import IndexItem from "@/components/ui/index-item"' instead?

19 import { IndexItem } from '@/components/ui/index-item';
            ~~~~~~~~~

client/src/components/forms/book-form.tsx:225:23 - error TS2339: Property 'filter' does not exist on type '{}'.

225     return borrowings.filter((b: any) => b.bookId === bookId) || [];
                          ~~~~~~

client/src/components/forms/book-form.tsx:237:43 - error TS7006: Parameter 'd' implicitly has an 'any' type.

237     return new Date(Math.max(...dates.map(d => d.getTime())));
                                              ~

client/src/components/forms/book-form.tsx:910:25 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

910                         value={field.value}
                            ~~~~~

  client/src/components/ui/image-upload.tsx:12:3
    12   value: string;
         ~~~~~
    The expected type comes from property 'value' which is declared here on type 'IntrinsicAttributes & ImageUploadProps'

client/src/components/forms/book-form.tsx:1395:21 - error TS2322: Type '{ key: number | undefined; quote: { id?: number | undefined; content: string; page?: number | undefined; chapter?: string | undefined; author?: string | undefined; tags?: string | undefined; isFavorite?: boolean | undefined; }; onEdit: (quote: any) => void; onDelete: (id: string | number) => Promise<...>; onToggleFa...' is not assignable to type 'IntrinsicAttributes & QuoteCardProps'.
  Property 'onEdit' does not exist on type 'IntrinsicAttributes & QuoteCardProps'.

1395                     onEdit={handleEditQuote}
                         ~~~~~~

client/src/components/forms/book-form.tsx:1455:38 - error TS2769: No overload matches this call.
  Overload 1 of 4, '(value: string | number | Date): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number | Date'.
      Type 'undefined' is not assignable to type 'string | number | Date'.
  Overload 2 of 4, '(value: string | number): Date', gave the following error.
    Argument of type 'string | undefined' is not assignable to parameter of type 'string | number'.
      Type 'undefined' is not assignable to type 'string | number'.

1455                           ? new Date(form.getValues('publishedDate')).toLocaleDateString()
                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


client/src/components/forms/book-form.tsx:1524:75 - error TS2345: Argument of type 'number | undefined' is not assignable to parameter of type 'number'.
  Type 'undefined' is not assignable to type 'number'.

1524                               i < Math.floor((parseFloat(getAverageRating(book.id) || '0')) / 2)
                                                                               ~~~~~~~

client/src/components/forms/book-form.tsx:1543:33 - error TS2339: Property 'some' does not exist on type '{}'.

1543                     borrowings?.some((b: any) => b.bookId === book.id && b.status === 'borrowed')
                                     ~~~~

client/src/components/forms/book-form.tsx:1548:35 - error TS2339: Property 'some' does not exist on type '{}'.

1548                       borrowings?.some((b: any) => b.bookId === book.id && b.status === 'borrowed')
                                       ~~~~

client/src/components/forms/book-form.tsx:1552:36 - error TS2339: Property 'some' does not exist on type '{}'.

1552                       {borrowings?.some((b: any) => b.bookId === book.id && b.status === 'borrowed')
                                        ~~~~

client/src/components/forms/import-books-form.tsx:82:13 - error TS7034: Variable 'values' implicitly has type 'any[]' in some locations where its type cannot be determined.

82       const values = [];
               ~~~~~~

client/src/components/forms/import-books-form.tsx:103:25 - error TS7005: Variable 'values' implicitly has an 'any[]' type.

103           const value = values[index] || '';
                            ~~~~~~

client/src/components/forms/import-books-form.tsx:275:18 - error TS2790: The operand of a 'delete' operator must be optional.

275           delete bookData.missingFields;
                     ~~~~~~~~~~~~~~~~~~~~~~

client/src/components/forms/import-books-form.tsx:276:18 - error TS2790: The operand of a 'delete' operator must be optional.

276           delete bookData.isValid;
                     ~~~~~~~~~~~~~~~~

client/src/components/forms/import-books-form.tsx:277:18 - error TS2790: The operand of a 'delete' operator must be optional.

277           delete bookData.rowIndex;
                     ~~~~~~~~~~~~~~~~~

client/src/components/forms/return-book-form.tsx:66:84 - error TS2345: Argument of type '{ method: string; body: string; }' is not assignable to parameter of type 'string'.

 66       const updatedBorrowing = await apiRequest(`/api/borrowings/${borrowing.id}`, {
                                                                                       ~
 67         method: 'PATCH',
    ~~~~~~~~~~~~~~~~~~~~~~~~
...
 73         }),
    ~~~~~~~~~~~
 74       });
    ~~~~~~~

client/src/components/layout/notification-dropdown.tsx:142:51 - error TS2345: Argument of type '{}' is not assignable to parameter of type 'any[]'.
  Type '{}' is missing the following properties from type 'any[]': length, pop, push, concat, and 35 more.

142       const notifications = checkExpiryAndOverdue(borrowers, borrowings, librarians, notificationSettings);
                                                      ~~~~~~~~~

client/src/components/ui/aspect-ratio.tsx:2:39 - error TS2307: Cannot find module '@radix-ui/react-aspect-ratio' or its corresponding type declarations.

2 import * as AspectRatioPrimitive from "@radix-ui/react-aspect-ratio";
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/aspect-ratio.tsx:4:7 - error TS2451: Cannot redeclare block-scoped variable 'AspectRatio'.

4 const AspectRatio = AspectRatioPrimitive.Root;
        ~~~~~~~~~~~

client/src/components/ui/aspect-ratio.tsx:6:10 - error TS2300: Duplicate identifier 'AspectRatio'.

6 export { AspectRatio };
           ~~~~~~~~~~~

client/src/components/ui/aspect-ratio.tsx:8:7 - error TS2451: Cannot redeclare block-scoped variable 'AspectRatio'.

8 const AspectRatio = AspectRatioPrimitive.Root
        ~~~~~~~~~~~

client/src/components/ui/aspect-ratio.tsx:10:10 - error TS2300: Duplicate identifier 'AspectRatio'.

10 export { AspectRatio }
            ~~~~~~~~~~~

client/src/components/ui/carousel.tsx:4:8 - error TS2307: Cannot find module 'embla-carousel-react' or its corresponding type declarations.

4 } from "embla-carousel-react";
         ~~~~~~~~~~~~~~~~~~~~~~

client/src/components/ui/input-otp.tsx:2:43 - error TS2307: Cannot find module 'input-otp' or its corresponding type declarations.

2 import { OTPInput, OTPInputContext } from "input-otp";
                                            ~~~~~~~~~~~

client/src/components/ui/input-otp.tsx:3:10 - error TS2300: Duplicate identifier 'Dot'.

3 import { Dot } from "lucide-react";
           ~~~

client/src/components/ui/input-otp.tsx:4:10 - error TS2300: Duplicate identifier 'Dot'.

4 import { Dot } from "lucide-react"
           ~~~

client/src/components/ui/input-otp.tsx:37:44 - error TS18046: 'inputOTPContext' is of type 'unknown'.

37   const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]
                                              ~~~~~~~~~~~~~~~

client/src/components/ui/resizable.tsx:5:37 - error TS2307: Cannot find module 'react-resizable-panels' or its corresponding type declarations.

5 import * as ResizablePrimitive from "react-resizable-panels";
                                      ~~~~~~~~~~~~~~~~~~~~~~~~

client/src/lib/localStorage.ts:801:7 - error TS2322: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'.

801       cleanData.books = data.books.filter(book =>
          ~~~~~~~~~~~~~~~

client/src/lib/localStorage.ts:812:7 - error TS2322: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'.

812       cleanData.borrowers = data.borrowers.filter(borrower =>
          ~~~~~~~~~~~~~~~~~~~

client/src/lib/localStorage.ts:823:7 - error TS2322: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'.

823       cleanData.librarians = data.librarians.filter(librarian =>
          ~~~~~~~~~~~~~~~~~~~~

client/src/lib/localStorage.ts:833:7 - error TS2322: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'.

833       cleanData.borrowings = data.borrowings.filter(borrowing => {
          ~~~~~~~~~~~~~~~~~~~~

client/src/lib/localStorage.ts:857:7 - error TS2322: Type 'any[]' is not assignable to type 'never[]'.
  Type 'any' is not assignable to type 'never'.

857       cleanData.membershipApplications = data.membershipApplications.filter(app =>
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/lib/localStorage.ts:888:52 - error TS7006: Parameter 'borrowing' implicitly has an 'any' type.

888           data.borrowings = data.borrowings.filter(borrowing => {
                                                       ~~~~~~~~~

client/src/lib/queryClient.ts:258:7 - error TS2353: Object literal may only specify known properties, and 'cacheTime' does not exist in type 'OmitKeyof<QueryObserverOptions<unknown, Error, unknown, unknown, readonly unknown[], never>, "suspense" | "queryKey", "strictly">'.

258       cacheTime: 15 * 60 * 1000,
          ~~~~~~~~~

client/src/lib/sampleData.ts:284:47 - error TS2341: Property 'getData' is private and only accessible within class 'LocalStorage'.

284     const existingData = localStorage_storage.getData();
                                                  ~~~~~~~

client/src/lib/sampleData.ts:335:57 - error TS2339: Property 'id' does not exist on type '{ name: string; phone: string; category: string; joinedDate: string; expiryDate: string; email: string; address: string; churchName: string; fatherOfConfession: string; studies: string; job: string; hobbies: string; favoriteBooks: string; additionalPhone: string; } | { ...; }'.
  Property 'id' does not exist on type '{ name: string; phone: string; category: string; joinedDate: string; expiryDate: string; email: string; address: string; churchName: string; fatherOfConfession: string; studies: string; job: string; hobbies: string; favoriteBooks: string; additionalPhone: string; }'.

335     const validBorrowerIds = sampleBorrowers.map(b => b.id);
                                                            ~~

client/src/lib/sampleData.ts:336:49 - error TS2339: Property 'id' does not exist on type '{ coverImage: string; title: string; name: string; author: string; publisher: string; bookCode: string; copies: number; description: string; totalPages: number; cabinet: string; shelf: string; num: string; publishedDate: string; genres: string; comments: string; }'.

336     const validBookIds = sampleBooks.map(b => b.id);
                                                    ~~

client/src/lib/utils/export.ts:460:23 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ name: any; author: any; publisher: any; genres: any; Cabinet: any; Shelf: any; Number: any; 'Book Code': any; copies: any; }'.
  No index signature with a parameter of type 'string' was found on type '{ name: any; author: any; publisher: any; genres: any; Cabinet: any; Shelf: any; Number: any; 'Book Code': any; copies: any; }'.

460         const value = book[header];
                          ~~~~~~~~~~~~

client/src/pages/books.tsx:86:24 - error TS2339: Property 'filter' does not exist on type '{}'.

86     return borrowings?.filter((b: Borrowing) => b.bookId === bookId) || [];
                          ~~~~~~

client/src/pages/books.tsx:172:19 - error TS18047: 'e.currentTarget.parentElement' is possibly 'null'.

172                   e.currentTarget.parentElement.innerHTML = '<BookOpen class="h-5 w-5 text-blue-600 dark:text-blue-300" />';
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/books.tsx:242:40 - error TS2339: Property 'some' does not exist on type '{}'.

242         const isBorrowed = borrowings?.some((b: any) => b.bookId === row.id && b.status === 'borrowed');
                                           ~~~~

client/src/pages/books.tsx:317:23 - error TS2802: Type 'Set<unknown>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.

317   const authors = [...new Set(books?.map(book => book.author) || [])];
                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/books.tsx:317:38 - error TS2339: Property 'map' does not exist on type '{}'.

317   const authors = [...new Set(books?.map(book => book.author) || [])];
                                         ~~~

client/src/pages/books.tsx:317:42 - error TS7006: Parameter 'book' implicitly has an 'any' type.

317   const authors = [...new Set(books?.map(book => book.author) || [])];
                                             ~~~~

client/src/pages/books.tsx:318:26 - error TS2802: Type 'Set<unknown>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.

318   const publishers = [...new Set(books?.map(book => book.publisher) || [])];
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/books.tsx:318:41 - error TS2339: Property 'map' does not exist on type '{}'.

318   const publishers = [...new Set(books?.map(book => book.publisher) || [])];
                                            ~~~

client/src/pages/books.tsx:318:45 - error TS7006: Parameter 'book' implicitly has an 'any' type.

318   const publishers = [...new Set(books?.map(book => book.publisher) || [])];
                                                ~~~~

client/src/pages/books.tsx:319:22 - error TS2802: Type 'Set<unknown>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.

319   const genres = [...new Set(books?.flatMap(book =>
                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
320     book.genres ? book.genres.split(',').map((g: string) => g.trim()) : []
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
321   ) || [])];
    ~~~~~~~~~~

client/src/pages/books.tsx:319:37 - error TS2339: Property 'flatMap' does not exist on type '{}'.

319   const genres = [...new Set(books?.flatMap(book =>
                                        ~~~~~~~

client/src/pages/books.tsx:319:45 - error TS7006: Parameter 'book' implicitly has an 'any' type.

319   const genres = [...new Set(books?.flatMap(book =>
                                                ~~~~

client/src/pages/books.tsx:322:20 - error TS2802: Type 'Set<unknown>' can only be iterated through when using the '--downlevelIteration' flag or with a '--target' of 'es2015' or higher.

322   const tags = [...new Set(books?.flatMap(book =>
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
323     book.tags ? book.tags.split(',').map((t: string) => t.trim()) : []
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
324   ) || [])];
    ~~~~~~~~~~

client/src/pages/books.tsx:322:35 - error TS2339: Property 'flatMap' does not exist on type '{}'.

322   const tags = [...new Set(books?.flatMap(book =>
                                      ~~~~~~~

client/src/pages/books.tsx:322:43 - error TS7006: Parameter 'book' implicitly has an 'any' type.

322   const tags = [...new Set(books?.flatMap(book =>
                                              ~~~~

client/src/pages/books.tsx:377:44 - error TS2339: Property 'filter' does not exist on type '{}'.

377           {filterType === 'code' && books?.filter(book => book.bookCode && book.bookCode.trim() !== '').map(book => (
                                               ~~~~~~

client/src/pages/books.tsx:377:51 - error TS7006: Parameter 'book' implicitly has an 'any' type.

377           {filterType === 'code' && books?.filter(book => book.bookCode && book.bookCode.trim() !== '').map(book => (
                                                      ~~~~

client/src/pages/books.tsx:377:109 - error TS7006: Parameter 'book' implicitly has an 'any' type.

377           {filterType === 'code' && books?.filter(book => book.bookCode && book.bookCode.trim() !== '').map(book => (
                                                                                                                ~~~~

client/src/pages/books.tsx:400:32 - error TS2339: Property 'filter' does not exist on type '{}'.

400   const filteredBooks = books?.filter(book => {
                                   ~~~~~~

client/src/pages/books.tsx:400:39 - error TS7006: Parameter 'book' implicitly has an 'any' type.

400   const filteredBooks = books?.filter(book => {
                                          ~~~~

client/src/pages/books.tsx:401:36 - error TS2339: Property 'some' does not exist on type '{}'.

401     const isBorrowed = borrowings?.some((b: any) => b.bookId === book.id && b.status === 'borrowed');
                                       ~~~~

client/src/pages/books.tsx:441:47 - error TS7006: Parameter 'book' implicitly has an 'any' type.

441   const borrowedBooks = filteredBooks?.filter(book =>
                                                  ~~~~

client/src/pages/books.tsx:442:17 - error TS2339: Property 'some' does not exist on type '{}'.

442     borrowings?.some((b: any) => b.bookId === book.id && b.status === 'borrowed')
                    ~~~~

client/src/pages/books.tsx:445:33 - error TS2461: Type '{}' is not an array type.

445   const mostBorrowedBooks = [...(books || [])]
                                    ~~~~~~~~~~~~~

client/src/pages/books.tsx:450:28 - error TS2461: Type '{}' is not an array type.

450   const popularBooks = [...(books || [])]
                               ~~~~~~~~~~~~~

client/src/pages/books.tsx:455:29 - error TS2461: Type '{}' is not an array type.

455   const topRatedBooks = [...(books || [])]
                                ~~~~~~~~~~~~~

client/src/pages/books.tsx:461:27 - error TS2339: Property 'length' does not exist on type '{}'.

461       if (!books || books.length === 0) {
                              ~~~~~~

client/src/pages/books.tsx:470:49 - error TS2345: Argument of type '{}' is not assignable to parameter of type 'any[]'.
  Type '{}' is missing the following properties from type 'any[]': length, pop, push, concat, and 35 more.

470       const stats = exportLibraryWithStatistics(books, borrowings);
                                                    ~~~~~

client/src/pages/books.tsx:479:27 - error TS2339: Property 'length' does not exist on type '{}'.

479       if (!books || books.length === 0) {
                              ~~~~~~

client/src/pages/books.tsx:488:32 - error TS2339: Property 'map' does not exist on type '{}'.

488       const exportData = books.map(book => ({
                                   ~~~

client/src/pages/books.tsx:488:36 - error TS7006: Parameter 'book' implicitly has an 'any' type.

488       const exportData = books.map(book => ({
                                       ~~~~

client/src/pages/books.tsx:715:19 - error TS2322: Type 'unknown' is not assignable to type 'any[]'.

715                   books={books}
                      ~~~~~

  client/src/pages/books.tsx:513:67
    513   const LibraryExportDialog = ({ books, borrowings, onExport }: { books: any[], borrowings: any[], onExport: () => void }) => {
                                                                          ~~~~~
    The expected type comes from property 'books' which is declared here on type 'IntrinsicAttributes & { books: any[]; borrowings: any[]; onExport: () => void; }'

client/src/pages/books.tsx:716:19 - error TS2322: Type 'unknown' is not assignable to type 'any[]'.

716                   borrowings={borrowings}
                      ~~~~~~~~~~

  client/src/pages/books.tsx:513:81
    513   const LibraryExportDialog = ({ books, borrowings, onExport }: { books: any[], borrowings: any[], onExport: () => void }) => {
                                                                                        ~~~~~~~~~~
    The expected type comes from property 'borrowings' which is declared here on type 'IntrinsicAttributes & { books: any[]; borrowings: any[]; onExport: () => void; }'

client/src/pages/books.tsx:741:34 - error TS2339: Property 'length' does not exist on type '{}'.

741                   index={(books?.length || 0) + 1}
                                     ~~~~~~

client/src/pages/books.tsx:742:19 - error TS2322: Type '{ index: any; initialData: any; onSuccess: () => void; onCancel: () => void; }' is not assignable to type 'IntrinsicAttributes & BookFormProps'.
  Property 'initialData' does not exist on type 'IntrinsicAttributes & BookFormProps'.

742                   initialData={editingBook}
                      ~~~~~~~~~~~

client/src/pages/books.tsx:757:55 - error TS2339: Property 'length' does not exist on type '{}'.

757           <TabsTrigger value="all">All Books ({books?.length || 0})</TabsTrigger>
                                                          ~~~~~~

client/src/pages/books.tsx:763:57 - error TS2339: Property 'length' does not exist on type '{}'.

763           <TabsTrigger value="gallery">Gallery ({books?.length || 0})</TabsTrigger>
                                                            ~~~~~~

client/src/pages/books.tsx:776:15 - error TS2322: Type '{ data: any; columns: { key: string; header: string; cell: (row: any) => any; }[]; searchable: true; loading: boolean; emptyMessage: string; actions: (row: any) => Element; pagination: { totalItems: any; itemsPerPage: number; currentPage: number; onPageChange: Dispatch<...>; }; }' is not assignable to type 'IntrinsicAttributes & DataTableProps'.
  Property 'emptyMessage' does not exist on type 'IntrinsicAttributes & DataTableProps'.

776               emptyMessage={getEmptyMessage()}
                  ~~~~~~~~~~~~

client/src/pages/books.tsx:860:17 - error TS2322: Type '{ data: any; columns: { key: string; header: string; cell: (row: any) => any; }[]; searchable: true; loading: boolean; emptyMessage: string; actions: (row: any) => Element; }' is not assignable to type 'IntrinsicAttributes & DataTableProps'.
  Property 'emptyMessage' does not exist on type 'IntrinsicAttributes & DataTableProps'.

860                 emptyMessage="No books are currently borrowed"
                    ~~~~~~~~~~~~

client/src/pages/books.tsx:915:17 - error TS2322: Type '{ data: any[]; columns: { key: string; header: string; cell: (row: any) => any; }[]; searchable: true; loading: boolean; emptyMessage: string; actions: (row: any) => Element; }' is not assignable to type 'IntrinsicAttributes & DataTableProps'.
  Property 'emptyMessage' does not exist on type 'IntrinsicAttributes & DataTableProps'.

915                 emptyMessage="No borrowing data available"
                    ~~~~~~~~~~~~

client/src/pages/books.tsx:970:17 - error TS2322: Type '{ data: any[]; columns: { key: string; header: string; cell: (row: any) => any; }[]; searchable: true; loading: boolean; emptyMessage: string; actions: (row: any) => Element; }' is not assignable to type 'IntrinsicAttributes & DataTableProps'.
  Property 'emptyMessage' does not exist on type 'IntrinsicAttributes & DataTableProps'.

970                 emptyMessage="No popularity data available"
                    ~~~~~~~~~~~~

client/src/pages/books.tsx:1025:17 - error TS2322: Type '{ data: any[]; columns: { key: string; header: string; cell: (row: any) => any; }[]; searchable: true; loading: boolean; emptyMessage: string; actions: (row: any) => Element; }' is not assignable to type 'IntrinsicAttributes & DataTableProps'.
  Property 'emptyMessage' does not exist on type 'IntrinsicAttributes & DataTableProps'.

1025                 emptyMessage="No rating data available"
                     ~~~~~~~~~~~~

client/src/pages/books.tsx:1094:39 - error TS7006: Parameter 'book' implicitly has an 'any' type.

1094                   {filteredBooks.map((book) => {
                                           ~~~~

client/src/pages/books.tsx:1095:52 - error TS2339: Property 'some' does not exist on type '{}'.

1095                     const isBorrowed = borrowings?.some((b: any) => b.bookId === book.id && b.status === 'borrowed');
                                                        ~~~~

client/src/pages/borrowers.tsx:69:43 - error TS2339: Property 'filter' does not exist on type '{}'.

69   const filteredBorrowers = allBorrowers?.filter(borrower => {
                                             ~~~~~~

client/src/pages/borrowers.tsx:69:50 - error TS7006: Parameter 'borrower' implicitly has an 'any' type.

69   const filteredBorrowers = allBorrowers?.filter(borrower => {
                                                    ~~~~~~~~

client/src/pages/borrowers.tsx:163:15 - error TS7053: Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: string; middle: string; secondary: string; university: string; graduate: string; }'.
  No index signature with a parameter of type 'string' was found on type '{ primary: string; middle: string; secondary: string; university: string; graduate: string; }'.

163         name: categoryMap[category] || category,
                  ~~~~~~~~~~~~~~~~~~~~~

client/src/pages/borrowers.tsx:177:13 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ primary: string; middle: string; secondary: string; university: string; graduate: string; }'.

177       name: categoryMap[item.category] || item.category,
                ~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/borrowers.tsx:385:31 - error TS2339: Property 'length' does not exist on type '{}'.

385               ? allBorrowers?.length || 0
                                  ~~~~~~

client/src/pages/borrowers.tsx:386:31 - error TS2339: Property 'filter' does not exist on type '{}'.

386               : allBorrowers?.filter(borrower => borrower.category === category.value).length || 0;
                                  ~~~~~~

client/src/pages/borrowers.tsx:386:38 - error TS7006: Parameter 'borrower' implicitly has an 'any' type.

386               : allBorrowers?.filter(borrower => borrower.category === category.value).length || 0;
                                         ~~~~~~~~

client/src/pages/borrowing.tsx:79:25 - error TS18048: 'borrowers' is possibly 'undefined'.

79     if (!borrowerId || !borrowers.length) return null;
                           ~~~~~~~~~

client/src/pages/borrowing.tsx:80:12 - error TS18048: 'borrowers' is possibly 'undefined'.

80     return borrowers.find((b: any) =>
              ~~~~~~~~~

client/src/pages/borrowing.tsx:87:21 - error TS18048: 'books' is possibly 'undefined'.

87     if (!bookId || !books.length) return null;
                       ~~~~~

client/src/pages/borrowing.tsx:88:12 - error TS18048: 'books' is possibly 'undefined'.

88     return books.find((b: any) =>
              ~~~~~

client/src/pages/borrowing.tsx:94:30 - error TS18048: 'borrowings' is possibly 'undefined'.

94   const filteredBorrowings = borrowings.filter((borrowing: any) => {
                                ~~~~~~~~~~

client/src/pages/borrowing.tsx:187:11 - error TS2801: This condition will always return true since this 'Promise<any>' is always defined.

187       if (updatedBorrowing) {
              ~~~~~~~~~~~~~~~~

  client/src/pages/borrowing.tsx:187:11
    187       if (updatedBorrowing) {
                  ~~~~~~~~~~~~~~~~
    Did you forget to use 'await'?

client/src/pages/borrowing.tsx:208:42 - error TS18048: 'borrowings' is possibly 'undefined'.

208     { value: 'all', label: 'All', count: borrowings.length },
                                             ~~~~~~~~~~

client/src/pages/borrowing.tsx:209:48 - error TS18048: 'borrowings' is possibly 'undefined'.

209     { value: 'active', label: 'Active', count: borrowings.filter((b: any) => !b.returnDate).length },
                                                   ~~~~~~~~~~

client/src/pages/borrowing.tsx:210:52 - error TS18048: 'borrowings' is possibly 'undefined'.

210     { value: 'returned', label: 'Returned', count: borrowings.filter((b: any) => b.returnDate).length },
                                                       ~~~~~~~~~~

client/src/pages/borrowing.tsx:211:50 - error TS18048: 'borrowings' is possibly 'undefined'.

211     { value: 'overdue', label: 'Overdue', count: borrowings.filter((b: any) => !b.returnDate && new Date(b.dueDate) < new Date()).length },
                                                     ~~~~~~~~~~

client/src/pages/borrowing.tsx:601:15 - error TS2322: Type '{ data: any[]; columns: ({ key: string; header: string; cell: (row: any) => string; } | { key: string; header: string; cell: (row: any) => Element | "Unknown"; } | { key: string; header: string; cell: (row: any) => Element | "-"; } | { ...; })[]; isLoading: boolean; emptyMessage: string; }' is not assignable to type 'IntrinsicAttributes & DataTableProps'.
  Property 'isLoading' does not exist on type 'IntrinsicAttributes & DataTableProps'. Did you mean 'loading'?

601               isLoading={isLoading}
                  ~~~~~~~~~

client/src/pages/dashboard.tsx:159:33 - error TS2339: Property 'map' does not exist on type '{}'.

159     return borrowerDistribution.map((item: any) => ({
                                    ~~~

client/src/pages/dashboard.tsx:160:13 - error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ primary: string; middle: string; secondary: string; university: string; graduate: string; }'.

160       name: categoryMap[item.category] || item.category,
                ~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/dashboard.tsx:224:32 - error TS2339: Property 'length' does not exist on type '{}'.

224             value={borrowings?.length || 0}
                                   ~~~~~~

client/src/pages/dashboard.tsx:226:42 - error TS2339: Property 'length' does not exist on type '{}'.

226             change={{ value: borrowings?.length || 0, trend: borrowings?.length > 0 ? 'up' : 'down', text: 'total' }}
                                             ~~~~~~

client/src/pages/dashboard.tsx:226:74 - error TS2339: Property 'length' does not exist on type '{}'.

226             change={{ value: borrowings?.length || 0, trend: borrowings?.length > 0 ? 'up' : 'down', text: 'total' }}
                                                                             ~~~~~~

client/src/pages/dashboard.tsx:232:31 - error TS2339: Property 'filter' does not exist on type '{}'.

232             value={borrowers?.filter(borrower => {
                                  ~~~~~~

client/src/pages/dashboard.tsx:232:38 - error TS7006: Parameter 'borrower' implicitly has an 'any' type.

232             value={borrowers?.filter(borrower => {
                                         ~~~~~~~~

client/src/pages/dashboard.tsx:239:33 - error TS2339: Property 'filter' does not exist on type '{}'.

239               value: borrowers?.filter(borrower => {
                                    ~~~~~~

client/src/pages/dashboard.tsx:239:40 - error TS7006: Parameter 'borrower' implicitly has an 'any' type.

239               value: borrowers?.filter(borrower => {
                                           ~~~~~~~~

client/src/pages/dashboard.tsx:244:33 - error TS2339: Property 'filter' does not exist on type '{}'.

244               trend: borrowers?.filter(borrower => {
                                    ~~~~~~

client/src/pages/dashboard.tsx:244:40 - error TS7006: Parameter 'borrower' implicitly has an 'any' type.

244               trend: borrowers?.filter(borrower => {
                                           ~~~~~~~~

client/src/pages/dashboard.tsx:264:33 - error TS2339: Property 'length' does not exist on type '{}'.

264         {!borrowerDistribution?.length ? (
                                    ~~~~~~

client/src/pages/dashboard.tsx:283:29 - error TS2339: Property 'length' does not exist on type '{}'.

283         {!memberGrowthData?.length && !borrowers?.length ? (
                                ~~~~~~

client/src/pages/dashboard.tsx:283:51 - error TS2339: Property 'length' does not exist on type '{}'.

283         {!memberGrowthData?.length && !borrowers?.length ? (
                                                      ~~~~~~

client/src/pages/settings.tsx:734:54 - error TS18046: 'error' is of type 'unknown'.

734         description: `Failed to reset system data: ${error.message}`,
                                                         ~~~~~

server/routes.ts:350:35 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Argument of type '(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) => Promise<Response<any, Record<...>, number> | undefined>' is not assignable to parameter of type 'Application<Record<string, any>>'.
      Type '(req: Request<{}, any, any, ParsedQs, Record<string, any>>, res: Response<any, Record<string, any>, number>) => Promise<Response<any, Record<...>, number> | undefined>' is missing the following properties from type 'Application<Record<string, any>>': init, defaultConfiguration, engine, set, and 63 more.

350   app.post('/api/reset-database', async (req, res) => {
                                      ~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/express-serve-static-core/index.d.ts:168:5
    168     (path: PathParams, subApplication: Application): T;
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The last overload is declared here.

server/routes.ts:378:29 - error TS2339: Property 'message' does not exist on type '{}'.

378           details: dbError?.message || 'Unknown database error'
                                ~~~~~~~

server/routes.ts:530:29 - error TS2339: Property 'message' does not exist on type '{}'.

530             details: error?.message || 'Unknown error occurred',
                                ~~~~~~~

server/routes.ts:531:68 - error TS2339: Property 'stack' does not exist on type '{}'.

531             stack: process.env.NODE_ENV === 'development' ? error?.stack : undefined
                                                                       ~~~~~


Found 153 errors in 22 files.

Errors  Files
     8  client/src/components/dashboard/book-recommendations.tsx:100
     2  client/src/components/dashboard/borrowing-trends.tsx:16
    20  client/src/components/dashboard/popular-books.tsx:27
     3  client/src/components/dashboard/top-borrowers.tsx:245
    10  client/src/components/forms/book-form.tsx:19
     5  client/src/components/forms/import-books-form.tsx:82
     1  client/src/components/forms/return-book-form.tsx:66
     1  client/src/components/layout/notification-dropdown.tsx:142
     5  client/src/components/ui/aspect-ratio.tsx:2
     1  client/src/components/ui/carousel.tsx:4
     4  client/src/components/ui/input-otp.tsx:2
     1  client/src/components/ui/resizable.tsx:5
     6  client/src/lib/localStorage.ts:801
     1  client/src/lib/queryClient.ts:258
     3  client/src/lib/sampleData.ts:284
     1  client/src/lib/utils/export.ts:460
    44  client/src/pages/books.tsx:86
     7  client/src/pages/borrowers.tsx:69
    11  client/src/pages/borrowing.tsx:79
    14  client/src/pages/dashboard.tsx:159
     1  client/src/pages/settings.tsx:734
     4  server/routes.ts:350
PS C:\Users\Asus\Downloads\LibraryIntelligence>